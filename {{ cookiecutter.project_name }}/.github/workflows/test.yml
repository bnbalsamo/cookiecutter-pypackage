{%- raw -%}
---
name: Test

on:
  push:
    branches: ["main", "hotfix/*"]
  pull_request:
    branches: ["main", "hotfix/*"]
  workflow_dispatch:

env:
  LATEST_PYTHON: "3.11"

jobs:
  build-package:
    name: Build & verify package
    runs-on: "ubuntu-latest"  # Default platform
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v1

  lint:
    runs-on: "ubuntu-latest"
    needs: build-package
    steps:
      - uses: "actions/checkout@v3"
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.LATEST_PYTHON }}
      - run: |
          python -Im pip install nox
      - name: Run linters
        run: |
          python -Im nox -e lint

  docs:
    runs-on: "ubuntu-latest"
    needs: build-package
    steps:
      - uses: "actions/checkout@v3"
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.LATEST_PYTHON }}
      - run: |
          python -Im pip install nox
      - name: Build docs
        run: |
          python -Im nox -e docs

  test:
    strategy:
      fail-fast: false
      matrix:
        # Keep this in sync w/ the noxfile
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: "ubuntu-latest"
    needs: build-package
    steps:
      - uses: "actions/checkout@v3"
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          python -Im pip install nox
      - name: Run tests
        run: |
          python -Im nox -e test -- -a dist/*.whl
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore

  coverage:
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.LATEST_PYTHON }}
      - run: python -Im pip install --upgrade coverage[toml]
      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
      - name: Combine coverage and report.
        run: |
          python -Im coverage combine
          python -Im coverage report
      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}
{% endraw %}