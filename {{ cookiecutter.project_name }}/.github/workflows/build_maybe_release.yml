{%- raw -%}
---
name: Build Dists And Maybe Upload

on:
  push:
    tags: ["*"]
  release:
    types: [published]
  workflow_dispatch:

# Required for gh-pages
permissions:
  contents: write
jobs:
  # Always build & test package on any tag.
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: hynek/build-and-inspect-python-package@v1

  test-artifact:
    name: Test the Built Artifact
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist
      - uses: wntrblm/nox@2023.04.22
      - name: Test built package
        run: |
          nox -e test docs -- -a dist/*.whl

  # If this is a release publish...
  release-pypi:
      name: Publish released package to pypi.org
      if: github.event.action == 'published'
      runs-on: ubuntu-latest
      needs: ["build-package", "test-artifact"]

      steps:
        - name: Download packages built by build-and-inspect-python-package
          uses: actions/download-artifact@v3
          with:
            name: Packages
            path: dist

        - name: Upload package to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            password: ${{ secrets.PYPI_TOKEN }}

  release-docs:
    name: Publish updated docs
    if: github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: ["release-pypi"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Docs Environment
        run: |
          python -m pip install -r requirements/doc_requirements.txt
          python -m pip install .
          python -m mkdocs gh-deploy --force
{% endraw %}