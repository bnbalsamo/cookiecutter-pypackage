[tox]
envlist = {{ cookiecutter.tox_py_versions }},flake8,bandit,isort,docs,checkmanifest

[travis]
python = 
    3.7: py37
    3.6: py36
    3.5: py35
    3.4: py34
    2.7: py27

[testenv]
deps =
    -rrequirements/requirements_tests.txt
commands =
    pip freeze
    coverage run {posargs} -m pytest
    coverage report

[testenv:flake8]
skip_install = true
deps =
    flake8
commands =
    flake8 {posargs} {{ cookiecutter.slug_name }} tests

[testenv:bandit]
skip_install = true
deps =
    bandit
commands =
    bandit {posargs} -r {{ cookiecutter.slug_name }}

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort {posargs:--diff} -rc -c {{ cookiecutter.slug_name }}

[testenv:docs]
deps =
    -rrequirements/requirements_docs.txt
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:checkmanifest]
deps = 
    check-manifest
commands = 
    check-manifest

[testenv:pindeps]
recreate = true
deps =
commands =
    python -c 'import pathlib, datetime; from pip._internal.operations import freeze; x = freeze.freeze(skip=["{{ cookiecutter.slug_name }}", "pip", "setuptools", "wheel"]); f = open(pathlib.Path(r"{toxworkdir}") / "requirements.txt", "w"); f.write("# Pinned on " + datetime.datetime.today().strftime("%Y-%m-%d") + "\n"); [f.write(p+"\n") for p in x]'
    python -c 'import pathlib; print("pinned requirements.txt available under file://\{0\} - Move it into the project root.".format(pathlib.Path(r"{toxworkdir}") / "requirements.txt"))'
